                             Change Log for WolfMUD

This document details the main highlights for each release of WolfMUD. For
detailed information on changes please see the WolfMUD git repository:

             git clone https://code.wolfmud.org/WolfMUD WolfMUD.git


v0.0.6 Released Sunday 1st May
==============================================================================

Security

  - Tighten permissions on new player files and file produced by the #DEBUG
    command. It is adviseable to run chmod 0660 data/players/*.wrj on Linux. On
    Windows please review the file permissions for existing files.
    Commit: da2ed6b and eefef4b.

  - Reduce the amount of time plain text passwords are held in memory. Some
    player passwords may have been compromised due to use of the #DUMP command
    and access to the heapdump file. Some player passwords may have been
    compromised if local users can access the server's memory.
    Commit: b29e762.

Added

  - New OnCleanup attribute for custom clean up messages, see
    docs/zone-files.txt for more details.
  - New OnReset attribute for reset/respawning up messages, , see
    docs/zone-files.txt for more details.
  - New OnAction and Action attributes, see docs/zone-files.txt for more
    details.
  - Inventories have a new Players method for checking if there are any players
    in an inventory.
  - New #DEBUG command to aid developing and debugging.

Changed

  - Output of READ command made more generic. Instead of the template being
    "You read the writing on <item>. It says: <writing>" it is now "You read
    <item>.  <writing>".  Wording of WRITING attributes in zone files may need
    updating.
  - If a reset or respawn occurs within a container and an OnReset message is
    provided the message will propagate to the location the container is in.
  - Zone files updated with OnCleanup and OnReset messages.
  - Prevention of players being junked now via automatic veto.
  - Statistics in log now display a Thing count.
  - Lease acquired and released messages no longer reported in log.
  - Improved debugging flags in config.wrj, see docs/configuration-file.txt for
    more details.
  - Event goroutines now recover from a panic unless Debug.Panic is true. See
    docs/configuration-file.txt for more details.

Fixed

  - The LOOK command now automatically uppercases the first letter in titles.
  - The TAKE command now automatically uppercases the first letter of a
    container's name.
  - Improved layout of event.Cancel in #DUMP output.
  - The #DUMP command no longer crashes the server with invalid addresses.


v0.0.5 Released Sunday 2nd April
==============================================================================

Added

  - Events gained jitter to introduce randomness to timing.
  - New mechanism added to better free and release resources for garbage
    collection.
  - New Inventory.Move method more efficient for the common case of moving
    something from one Inventory to another. Add and Remove methods updated to
    use Move. Commands updated to use new Move where possible.
  - Added automated resets and spawning to items via new Reset attribute.
  - New $RESET and $SPAWN scripting commands.
  - New JUNK commands for player to dispose of items.
  - Added automated clean ups to items via new Cleanup attribute.
  - When debugging the DUMP command can now take the address of a Thing.
  - New unique ID generator - all Thing now have a unique ID and unique alias.

Changed

  - Added jitter to Door attributes to add some randomness.
  - Inventory now add a Locate attribute to a Thing when it is put into an
    Inventory.
  - Zone loader rewritten and improved.
  - Reported memory stats in the log are now more accurate.
  - Buffers in the message package reworked to be more efficient with the
    addition of a reusable pool of buffers.
  - Exits.List method improved to create less garbage and use less string
    concatenation.
  - Updated items in zones with new Reset attribute.
  - Updated items in zones with new Cleanup attribute.
  - Inventories where the parent Thing has a narrative attribute no longer
    display 'It is empty' when there are no non-narrative content.

Fixed

  - Doors can now be placed between zone where on side is in one zone and the
    'other side' is in a different zone.
  - References are now properly released from slices fixing a minor memory
    leak.
  - Fixed a panic when calling Player.Close on a nil Player pointer. In reality
    not a big issue as it was triggered when the player logged out and didn't
    crash the server unless running in debug mode.
  - Fixed decoder.Duration in recordjar package so that it can parse uppercased
    data passed to it.

Known bugs

  - When using the DUMP command with memory addresses it's to easy to crash the
    client thread. Comments have been added warning of this and DUMP with a
    memory address is only enabled when the server is run in debug mode.


v0.0.4 Released Thursday 2nd March, 2017
==============================================================================

Added

  - Test cases added for rewritten recordjar.Read method.
  - New recordjar data types: StringList, KeyedString, KeyedStringList. See
    docs/zone-files.txt for details.
  - Zone files can now contain vetoes.
  - cmd.state has a new Script method for scripting commands. Commands only
    usable in scripting mode denoted by prefixing the command with a '$'
    symbol.
  - New script only $POOF command to announce players joining game.
  - attr.Inventory gained a Narratives method to retrieve narrative items.
  - new event package for asynchronous scripted commands.
  - text package gained a new TitleFirst method to uppercase the dirst rune in
    a string.
  - All attributes and attr.Thing now have a Copy method. The Copy method has
    also been added to the has.Attribute and has.Thing interfaces.
  - New Door attribute added so that doors can be defined in zone files. See
    docs/zone-files.txt for details.
  - Added the tavern door and shed door to data/zones/zinara.wrj as example
    doors.
  - New OPEN and CLOSE commands to open and close doors.

Changed

  - Rewritten recordjar.Read method to be simpler and have fewer corner cases.
  - EXAMINE command can now be vetoed.
  - zones package now adds a Locate attribute to Things with a Door attribute.
  - zones package now creates the 'other side' of doors when a Thing has a Door
    attribute.
  - Update COMMANDS command to not report scripting only commands starting with
    a '$' symbol.
  - MOVE command can now be vetoed.

Fixed

  - Another colour bleeding issue fixed.
  - Nil panic fixed when loading zones and populating inventories with an
    invalid ref.
  - Passing of a copied mutex in text.Dictionary.
  - recordjar.decoder should uppercase returned key and data as documented.
  - attr.inventory Add method should always call SetWhere if Locate attribute
    is found.

Known bugs

  - Adding a Door attribute to a non-narrative, e.g. directly to a location or
    a moveable item, can result in strange and unexpected behaviour.
  - The new Thing and Attribute copy mechanism does not check for cyclic
    dependencies.

v0.0.3 Released Friday 23rd December, 2016
==============================================================================

Fixed

  - Colour bleeding issues fixed (Mainly Windows TELNET)
  - Multiple description sequence fixed so that main descriptions come first.


v0.0.2 Released Monday 5th December, 2016
==============================================================================

Added

  - Text folding now has support for Unicode combining characters.
  - Added NONE as a runtime option to not load any configuration file.
    See docs/running-the-server.txt for details.
  - New messages package containing message buffers.
  - Message buffers now support a silent mode.
  - Commands now send coloured messages:
      - Red: Something bad / undesirable happened
      - Green: Something good / desirable happened
      - Yellow: Something informational happened
  - Server greeting can now contain embeded colour codes.
  - Added initial tests for text and message packages.
  - New docs/upgrading.txt

Changed

  - Improved performance of embedded colour codes.
  - text.Dictionary map now protected by sync.Mutex.
  - Message buffers moved from cmd/state to new message package.
  - Message buffers reimplemented, no longer based on bytes.Buffer.
  - Message buffers now use Send and Append methods instead of WriteJoin.
  - cmd/state and frontend both use new message package for buffers.
  - state.script method uses new message buffers.

Fixed

  - Fixed an issue with TELNET clients sending unprocessed strings containing
    DEL (ASCII 0x7F or \b) characters. Using delete in Windows TELNET client
    now works as expected.
  - Text folding should only preserve leading whitespace.
  - Fixed a panic in text.Fold with a width less than 1.
  - Fixed a panic if player only enters stop words.

Known bugs

  - An extra blank line is sometimes appended to the end of the greeting
    displayed when players connect. This seems to be an issue in the recordjar
    package.
  - If Send or Append is used to start a message and only a colour is written a
    subsequent Append will cause a space to be present at the start of the
    message.

Security

  - None :)


v0.0.1 Released Monday 31st October, 2016
==============================================================================

  Initial release.
